apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kratos
  namespace: shikanime
spec:
  replicas: 1
  serviceName: kratos
  selector:
    matchLabels:
      app.kubernetes.io/name: kratos
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kratos
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/part-of
                      operator: NotIn
                      values:
                        - nishir-security
                topologyKey: kubernetes.io/hostname
      initContainers:
        - name: kratos-migrate
          image: kratos
          args:
            - migrate
            - sql
            - --config
            - /etc/kratos/kratos.yaml
            - --read-from-env
            - --yes
          envFrom:
            - secretRef:
                name: kratos
          volumeMounts:
            - name: config
              mountPath: /etc/kratos
              readOnly: true
      containers:
        - name: kratos
          image: kratos
          args:
            - serve
            - all
            - --config
            - /etc/kratos/kratos.yaml
          envFrom:
            - secretRef:
                name: kratos
          ports:
            - containerPort: 4433
              name: http
            - containerPort: 4434
              name: http-admin
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http-admin
            initialDelaySeconds: 30
          livenessProbe:
            httpGet:
              path: /health/alive
              port: http-admin
            initialDelaySeconds: 60
          startupProbe:
            httpGet:
              path: /health/ready
              port: http-admin
            failureThreshold: 30
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/kratos
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: kratos
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kratos-postgres
  namespace: shikanime
spec:
  serviceName: kratos-postgres
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kratos-postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kratos-postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          env:
            - name: POSTGRES_DB
              value: kratos
            - name: POSTGRES_USER
              value: kratos
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kratos
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: kratos-postgres-data
